
Q1. Write a program which displays the sum of digits of an integer read from the user.

Answer: 

int n = scan.nextInt();
int sum = 0; 
while (n > 0) { 
sum += n % 10; 
n /= 10;
} 
System.out.println("sum = " + sum);

Rationale:

1.	You are using ‘scan.nextInt’ because you are reading an integer from the user.
2.	 You want to keep extracting the digits of this integer as long as the integer is greater than 0.
3.	That’s why you use a ‘while’ loop because as long as ‘n’ is greater than 0, it will keep going.
4.	Inside this loop, you want to extract the digits and add it to a variable called ‘sum’.
5.	Declare the variable called sum. [above the while loop]
6.	‘Int sum = 0’
7.	 Now inside the loop, you get the first digit.
8.	You want to add to the variable sum, ’n’ modulo % 10 [sum += n % 10]
9.	For example, if our number is ‘ABC’, you are adding ‘C’ to the variable sum.
10.	Now you have to get rid of the digit ‘C’
11.	That’s why you divide the variable n by 10 [n/=10]
12.	So if ‘n’ was equal to ‘ABC’, n = ABC], it is now equal to AB; [n =AB].
13.	The loop ends here.
14.	Then you check the condition.


int n = scan.nextInt();
int sum = 0; 
while (n > 0) { 
sum += n % 10; 
n /= 10;
} 
System.out.println("sum = " + sum);


15.	If the user enters the number ‘513’. N becomes 513 [n = 513]
16.	Ask yourself is 513 greater than 0. Yes it is. 
17.	That means the condition ‘while(n > 0)’ is true
18.	So we are adding ‘513’ which is n, modulo% 10 to the variable ‘sum’ .
19.	It looks like this: sum += 513 % 10;
20.	But you are seeing this: sum += n % 10;
21.	Then ‘n’ becomes 51 and no longer 513.


22.	Then you add the digit ‘1’ to ‘sum’.
23.	Then you will divide 51 by 10 
24.	So ‘n’ is now equal to 5.



25.	Add 5 to the variable sum [sum += 5 % 10]
26.	Then divide 5 by 10
27.	So n, which was 513, it now equal to 0.


28.	So if you check the condition ‘while (n > 0)’ it is False.
29.	Because 0 is not greater than 0.
30.	You exit the loop.
31.	The sum of your digits ‘513’ will be stored in the variable ‘sum’.


32.	Then you print the sum. 
33.	System.out.println(“sum is: ” + sum);

  If you still don’t understand what’s happening:

1.	The user entered ‘513’, so n is equal to 513
2.	n = 513
3.	The computer does ‘ sum += 513 % 10’ so that the sum is now equal to 3.
4.	Because you have added 3 to the sum.
5.	sum = 3
6.	even though you have added the digit 3 to the sum
7.	n is still equal to 513 [n =513] and you have to get rid of the 3.
8.	You get rid of the 3 by dividing 513 by 10 [n /= 10]
9.	So n is now equal to 51.3
10.	But because n is an int value, it doesn’t understand the decimal point so it only knows 51. 
11.	Therefore 3 is abandoned.
12.	Hence n = 51
13.	Now you’re left with sum += 51 % 10.
14.	You repeat it again
15.	You add 1 to the sum.
16.	Sum = 1 + 3
17.	But n is still = 51;
18.	So you divide 51 by 10;
19.	N /= 51
20.	N is now 5.1
21.	It doesn’t know decimal so it can only see 5.
22.	N = 5.
23.	Repeat again
24.	Sum +=5 % 10
25.	Sum = 5 + 1 + 3
26.	n is still equal to 5 so we divide by 10
27.	5 /= 10 makes n = 0.5
28.	It doesn’t know decimal so it can only see 0


29.	The while loop says while (n > 0). This is false because 0 is not greater than 0. 0 is equal to 0.  0 == 0. 
30. The loop stops!
